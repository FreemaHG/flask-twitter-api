version: '3.11'

services:
  nginx:
    container_name: nginx
    build: nginx
    volumes:
      - ./nginx/static/images:/usr/share/nginx/html/static/images
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
    logging:
      driver: "local"

  api:
    build:
      context: .
    env_file:
      - .env
    container_name: api
    expose:
      - 5555
    ports:
      - 5555:5000
    command: ["/docker/app.sh"]
    # Зависимость
    depends_on:
      postgres:
        # Запуск только после успешной проверки контейнера с БД, успешный статус - healthy
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "local"

  postgres:
    image: postgres:15
    container_name: db
    # На случай, если в Docker уже есть запущенные контейнеры с PostgresSQL на порту 5432
    command: -p 5432
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USER:?err}
      - POSTGRES_PASSWORD=${DB_PASS:?err}
      - POSTGRES_DB=${DB_NAME:?err}
    env_file:
      - .env
    volumes:
      - postgres_db:/var/lib/postgresql/data
    # Проверка доступности БД (при успешной проверке состояние контейнера - healthy, до этого - unhealthy)
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      # Кол-во попыток
      retries: 5
    # Автоматический перезапуск при перезагрузке системы
    restart: unless-stopped

networks:
  local:
    driver: bridge

# Именованные тома
volumes:
  postgres_db: